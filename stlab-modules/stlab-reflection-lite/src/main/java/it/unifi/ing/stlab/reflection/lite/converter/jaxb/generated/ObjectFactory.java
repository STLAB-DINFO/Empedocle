//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.11.24 at 03:12:20 PM CET 
//


package it.unifi.ing.stlab.reflection.lite.converter.jaxb.generated;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the it.unifi.ing.stlab.reflection.xml.generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: it.unifi.ing.stlab.reflection.xml.generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Textual }
     * 
     */
    public Textual createTextual() {
        return new Textual();
    }

    /**
     * Create an instance of {@link Temporal }
     * 
     */
    public Temporal createTemporal() {
        return new Temporal();
    }

    /**
     * Create an instance of {@link Quantitative }
     * 
     */
    public Quantitative createQuantitative() {
        return new Quantitative();
    }

    /**
     * Create an instance of {@link Composite }
     * 
     */
    public Composite createComposite() {
        return new Composite();
    }

    /**
     * Create an instance of {@link Qualitative }
     * 
     */
    public Qualitative createQualitative() {
        return new Qualitative();
    }

}
